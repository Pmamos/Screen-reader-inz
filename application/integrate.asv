py.importlib.import_module('pyautogui');
NET.addAssembly('System.Speech');
outputModel = "OCRModel_44_all\pulpit_icon.traineddata";
%Wczytanie sonifikacji
obj = System.Speech.Synthesis.SpeechSynthesizer;
obj.Volume = 100;

interval = 1;


figure_cutter = figure;
hButton = uicontrol('Style', 'pushbutton', 'String', 'Zatrzymaj Timer', 'Callback', @(src, event) stopTimerCallback(t,kb));

global last_pos
last_pos = py.pyautogui.position();
% Konwertuj wynik na tablicę NumPy
last_pos = double(py.array.array('d', last_pos));

%Wczytanie detektora
detector = detector_choose(obj).detector;
detector_class = start_fun(obj,detector.ClassNames);
v = videoinput("winvideo", 2, "YUY2_1920x1080");
v.ReturnedColorspace = "rgb";


size_p = 200;

%Tworzenie timera
t = timer('ExecutionMode', 'fixedRate', 'Period', interval, 'TimerFcn', @(~,~) application(obj, v, size_p, figure_cutter, detector, detector_class, outputModel));
% Tworzymy event i listener do obsługi klawiatury
klawisz_event = event.listener(gcf, 'KeyPress', @klawiatura_callback);
% Tworzenie przycisku

pause(1)
start(t)

function application(obj, v, size_p, figure_cutter, detector, detector_class, outputModel)
    global last_pos center_pos;
    persistent queue   ind_start  ind_end currentScreenPart previousScreenPart pos last_obj;
    flaga_object = 0;
    if isempty(queue)
        % Wywołaj funkcję Pythona do odczytu położenia myszy
        pos = py.pyautogui.position();

        % Konwertuj wynik na tablicę NumPy
        pos = double(py.array.array('d', pos));
        % Initialize two independent queues
        queue1 = pos(1) * ones(1, 2);
        queue2 = pos(2) * ones(1, 2);
        
        % Combine the queues into a single matrix
        queue = [queue1; queue2];
        ind_start = 1;
        ind_end = 2;
        currentScreenPart = '';
        previousScreenPart = 'a';
        last_obj = '';
    end
    last_pos = pos;
    [pos, ind_start, ind_end, queue, movementDirection, currentScreenPart] = mouse_position(queue,ind_start, ind_end, flaga_object);
    img = cutter(v, size_p, pos);
    
    [bboxes, scores, labels, detectedImg] = detect_object(img, detector, detector_class);
    if(~isempty(bboxes))
        make_sound()
    end
    [min_ind, flaga_zblizanie, komunikat_end, center_pos] = inObject(bboxes,size_p,pos, movementDirection);

   
    % ocrResults = ocr(img,Language=outputModel);
    if min_ind > 0
        [ocrBBoxes,text] = whichText(min_ind,img, bboxes, outputModel);
        obiekt = string(labels(min_ind));
    else
        text = " ";
        obiekt = " ";
    end
    % imgName = insertObjectAnnotation(detectedImg,"rectangle",ocrResults.WordBoundingBoxes,ocrResults.Words);
    figure(figure_cutter)
    % imshow(detectedImg)
   
    
    previousScreenPart = read(obj, currentScreenPart, previousScreenPart,obiekt, flaga_zblizanie, komunikat_end, text,last_obj);
    last_obj = obiekt +' '+ text;
end

% Funkcja obsługująca zatrzymywanie timera po kliknięciu przycisku
function stopTimerCallback(timerObj)
    stop(timerObj);
    delete(timerObj);
    disp('Timer zatrzymany.');
end

function klawiatura_callback(~, event)
    % Sprawdzamy, czy naciśnięto klawisz Shift
    if strcmp(event.Key,'shift')
        disp('Naciśnięto klawisz Shift. Kończę program.');
        close(gcf); % Zamknij okno, aby zakończyć program
    end
    if strcmp(event.Key, 'control')
        disp('Naciśnięto klawisz Control.');
       
      
        import java.awt.Robot;
        robot = java.awt.Robot;
        
        global last_pos;    
       
        
        for ix = last_pos(1)-5:last_pos(1)
            robot.mouseMove(ix, last_pos(2));
            pause(0.01)
        end
       
    end
    if strcmp(event.Key, 'space')
        disp('Naciśnięto klawisz Spacji.');
        
        global center_pos; 
        %wczytanie myszy za pomocą której będziemy mogli poruszyć myszką
        import java.awt.Robot;
        robot = java.awt.Robot;
       
        for ix = center_pos(1)-5:center_pos(1)
            robot.mouseMove(ix, center_pos(2));
            pause(0.01)
        end
       
        % Symuluj naciśnięcie lewego przycisku myszy
  
        import java.awt.event.InputEvent;
        robot = Robot;
        robot.mousePress(InputEvent.BUTTON1_MASK);
        
        % Symuluj zwolnienie lewego przycisku myszy
        robot.mouseRelease(InputEvent.BUTTON1_MASK);
        robot.mousePress(InputEvent.BUTTON1_MASK);
        
        % Symuluj zwolnienie lewego przycisku myszy
        robot.mouseRelease(InputEvent.BUTTON1_MASK);
    end
end